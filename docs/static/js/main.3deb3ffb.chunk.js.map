{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItems.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","seriex","setSeriex","onSubmit","e","preventDefault","trim","length","series","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","estilos","color","GifGridItem","className","style","src","alt","GifGrid","setImages","useEffect","then","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAgCeA,EA7BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEXC,mBAAS,IAFE,mBAEhCC,EAFgC,KAExBC,EAFwB,KAavC,OACI,8BACI,uBAAMC,SATO,SAACC,GAClBA,EAAEC,iBACCJ,EAAOK,OAAOC,OAAS,IACtBR,GAAc,SAAAS,GAAM,OAAMP,GAAN,mBAAiBO,OACrCN,EAAU,MAKV,UACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAhBU,SAACP,GACvBF,EAAUE,EAAEQ,OAAOF,QAgBPG,YAAY,oCAEhB,mD,8BCvBHC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWZM,GAXY,4CAAH,sDCAdO,EAAU,CACZC,MAAM,OAYKC,EATK,SAAC,GAAuB,EAArBN,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC9B,OACI,sBAAKgB,UAAU,OAAf,UACI,mBAAGC,MAAOJ,EAAV,SAAqBH,IACrB,qBAAKQ,IAAKlB,EAAKmB,IAAKT,QCNnBU,EAAU,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,EAETf,mBAAS,IAFA,mBAE9B4B,EAF8B,KAEtBU,EAFsB,KAOrC,OAJAC,qBAAU,WACNzB,EAASC,GAAWyB,KAAMF,KAC3B,CAAEvB,IAGG,qCAAE,6BAAKA,IACX,qBAAKkB,UAAU,YAAf,SACKL,EAAOJ,KAAI,SAACC,GAAD,OACR,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBgB,IAAKhB,EAAIC,eCShCgB,EApBM,WAAO,IAAD,EACa1C,mBAAS,CAAC,KADvB,mBAChB2C,EADgB,KACJ5C,EADI,KAKvB,OACI,gCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEQ4C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAA0BA,SAAWA,GAAtBA,Y,MCZvC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3deb3ffb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Proptypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n    //const [setCategories] = props;\n    const [seriex, setSeriex] = useState(\"\");\n    const handleInputChange = (e) => {\n        setSeriex(e.target.value)\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(seriex.trim().length > 2){\n            setCategories(series => [ seriex, ...series ]);\n            setSeriex(\"\");\n        }\n    }\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={seriex}\n                    onChange={handleInputChange}\n                    placeholder=\"Introduce la serÃ­e a agregar\"\n                />\n                <button>Agregar</button>\n            </form>\n        </div>\n    )\n\n}\n\nexport default AddCategory;\n\nAddCategory.propTypes = {\n    setCategories: Proptypes.func.isRequired\n}","\n\nexport const getGifs = async ( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=7cg7HNB1YurlLuPLx5MZQUfp6dARgTMB`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n    return gifs;\n}","import React from 'react';\n\nconst estilos = {\n    color:\"red\"\n}\n\nconst GifGridItem = ({ id, title, url }) => {\n    return (\n        <div className=\"card\">\n            <p style={estilos}>{ title }</p>\n            <img src={url} alt={title} />\n        </div>\n    );\n}\n\nexport default GifGridItem;","import React, { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\nimport GifGridItem from './GifGridItems'\n\nexport const GifGrid = ({ category }) => {\n\n    const [images, setImages] = useState([]);\n    useEffect(() => {\n        getGifs( category ).then( setImages )\n    }, [ category ]);\n    \n    return (\n            <><h3>{category}</h3>\n        <div className=\"card-grid\">\n            {images.map((img) =>\n                <GifGridItem {...img} key={img.id} />\n            )}\n        </div></>\n    )\n}","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n    const [categories, setCategories] = useState([\"\"]);\n    // const handleAdd = () => {\n    // setCategories(series => [...series, {valore}])\n    // }\n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <hr />\n            <AddCategory setCategories={setCategories} />\n            <ol>\n                {\n                    categories.map(category =>\n                        <GifGrid key={ category } category={ category } />)\n                }\n            </ol>\n        </div>\n    )\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}